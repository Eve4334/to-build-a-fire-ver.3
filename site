<!DOCTYPE html>
<html lang="zh-TW">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>你能在零下50度中活下來嗎？ / Can You Survive at -50°C?</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body {
      background: linear-gradient(135deg, #a8d0ff 0%, #002f52 100%);
      color: #e0f0ff;
      font-family: 'Noto Sans TC', sans-serif;
      min-height: 100vh;
      position: relative;
      overflow-x: hidden;
    }
    .snowflake {
      position: fixed;
      top: -10px;
      color: #d0e7ff;
      font-size: 1.2rem;
      user-select: none;
      pointer-events: none;
      animation-name: fall;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }
    @keyframes fall {
      0% { transform: translateY(0) translateX(0); opacity: 1; }
      100% { transform: translateY(100vh) translateX(20px); opacity: 0; }
    }
    .frost-card {
      background: rgba(255 255 255 / 0.15);
      backdrop-filter: blur(8px);
      border-radius: 16px;
      box-shadow: 0 0 15px rgba(255 255 255 / 0.25);
      padding: 20px;
    }
    .btn-ice {
      background: linear-gradient(135deg, #4fc3f7, #0288d1);
      box-shadow: 0 4px 15px rgba(4, 121, 197, 0.6);
      color: white;
      font-weight: 600;
      border-radius: 8px;
      transition: all 0.3s ease;
      user-select: none;
      cursor: pointer;
    }
    .btn-ice:hover {
      background: linear-gradient(135deg, #6dd5fa, #0d47a1);
      box-shadow: 0 6px 20px rgba(4, 121, 197, 0.8);
      transform: scale(1.05);
    }
    .btn-ice:active {
      animation: crack 0.4s ease forwards;
    }
    @keyframes crack {
      0% {
        box-shadow: 0 0 15px #a0e9ff;
        transform: scale(1);
        filter: brightness(1);
      }
      50% {
        box-shadow:
          0 0 10px #a0e9ff,
          0 0 20px #00bfff,
          0 0 40px #00f0ff;
        filter: brightness(1.3);
        transform: scale(1.1);
      }
      100% {
        box-shadow: none;
        filter: brightness(1);
        transform: scale(1);
      }
    }
    #langToggle {
      position: fixed;
      top: 15px;
      right: 15px;
      background: rgba(255 255 255 / 0.25);
      color: #003366;
      border: none;
      padding: 8px 12px;
      border-radius: 12px;
      cursor: pointer;
      font-weight: 600;
      user-select: none;
      backdrop-filter: blur(6px);
      transition: background 0.3s ease;
      z-index: 1000;
    }
    #langToggle:hover {
      background: rgba(255 255 255 / 0.4);
    }
  </style>
</head>
<body>
  <button id="langToggle">English</button>

  <div id="snow-container"></div>

  <div class="max-w-xl mx-auto p-6 frost-card mt-20">
    <h1 id="title" class="text-4xl font-bold mb-6 text-center drop-shadow-lg">你能在零下50度中活下來嗎？</h1>

    <div id="quiz"></div>

    <button id="submitBtn" class="btn-ice px-5 py-3 mt-4 w-full hidden">查看結果</button>

    <div id="result" class="mt-8 hidden text-white text-center">
      <h2 id="resultTitle" class="text-3xl font-semibold mb-4 drop-shadow-lg">你的求生人格</h2>
      <canvas id="radarChart" width="300" height="300"></canvas>
      <p id="typeText" class="mt-5 text-xl font-medium max-w-lg mx-auto"></p>
      <p id="descText" class="mt-4 max-w-lg mx-auto leading-relaxed text-blue-200"></p>
    </div>
  </div>

<script>
  // 雪花特效程式碼
  const snowContainer = document.getElementById('snow-container');
  function createSnowflake() {
    const snowflake = document.createElement('div');
    snowflake.classList.add('snowflake');
    snowflake.style.left = Math.random() * window.innerWidth + 'px';
    snowflake.style.animationDuration = 5 + Math.random() * 5 + 's';
    snowflake.style.fontSize = 10 + Math.random() * 20 + 'px';
    snowflake.textContent = '❄';
    snowContainer.appendChild(snowflake);
    setTimeout(() => snowflake.remove(), 10000);
  }
  setInterval(createSnowflake, 200);

  // 雙語題目資料
  const quizData = {
    zh: [
      {
        text: "你發現氣溫已降到零下五十度，你會？",
        options: [
          { text: "按計畫出發，我相信自己判斷", score: { I: 1, T: 1 } },
          { text: "改變計畫，等有人陪我再出發", score: { F: 1, J: 1 } },
          { text: "想太多會拖慢進度，先走再說", score: { E: 1, P: 1 } },
          { text: "不出發，尋找安全處等待救援", score: { I: 1, J: 1 } }
        ]
      },
      {
        text: "途中你掉進了冰冷的溪水，你會怎麼辦？",
        options: [
          { text: "找樹下避風處再升火", score: { J: 1, S: 1 } },
          { text: "立刻原地升火，不能再拖了", score: { P: 1, T: 1 } },
          { text: "嘗試靠奔跑取暖", score: { E: 1, S: 1 } },
          { text: "保持冷靜，脫掉濕衣，尋找乾燥地方保暖", score: { I: 1, N: 1 } }
        ]
      },
      {
        text: "你好不容易點起火但火卻熄滅了，你會怎麼做？",
        options: [
          { text: "尋找樹枝與更好的位置重新嘗試", score: { T: 1, S: 1 } },
          { text: "內心開始出現絕望與過往回憶", score: { I: 1, N: 1 } },
          { text: "用身體取暖，等待救援", score: { I: 1, N: 1 } },
          { text: "嘗試喊叫求救或尋找其他人", score: { E: 1, F: 1 } }
        ]
      },
      {
        text: "手指凍傷幾乎不能動，你會？",
        options: [
          { text: "咬牙繼續嘗試升火，我不能停下", score: { T: 1, J: 1 } },
          { text: "坐下來保存體力，想著自己過去的人生", score: { I: 1, N: 1 } },
          { text: "嘗試用嘴或其他部位取代雙手動作", score: { S: 1, P: 1 } },
          { text: "大喊發洩情緒，希望釋放壓力", score: { E: 1, F: 1 } }
        ]
      },
      {
        text: "你沒有任何的火柴能夠點火了，你會？",
        options: [
          { text: "放下一切靜靜等待，也許是命運的安排", score: { I: 1, N: 1 } },
          { text: "抱住狗，試圖從牠身上取暖", score: { F: 1, S: 1 } },
          { text: "盡最後一絲力氣繼續前進", score: { T: 1, J: 1 } },
          { text: "試圖找出能發出訊號的東西求救", score: { E: 1, P: 1 } }
        ]
      }
    ],
    en: [
      {
        text: "You find the temperature has dropped to minus fifty degrees, what will you do?",
        options: [
          { text: "Stick to the plan, I trust my judgment", score: { I: 1, T: 1 } },
          { text: "Change plans, wait for company before setting off", score: { F: 1, J: 1 } },
          { text: "Overthinking slows progress, move forward first", score: { E: 1, P: 1 } },
          { text: "Don't set off, find a safe place and wait for rescue", score: { I: 1, J: 1 } }
        ]
      },
      {
        text: "You fell into icy cold creek, what do you do?",
        options: [
          { text: "Find a windbreak under a tree and start a fire", score: { J: 1, S: 1 } },
          { text: "Start a fire immediately on the spot, no delay", score: { P: 1, T: 1 } },
          { text: "Try to warm up by running", score: { E: 1, S: 1 } },
          { text: "Stay calm, take off wet clothes, find a dry place to warm up", score: { I: 1, N: 1 } }
        ]
      },
      {
        text: "You managed to start a fire but it went out, what do you do?",
        options: [
          { text: "Look for branches and better place to try again", score: { T: 1, S: 1 } },
          { text: "Feel despair and recall past memories", score: { I: 1, N: 1 } },
          { text: "Use body heat to warm up and wait for rescue", score: { I: 1, N: 1 } },
          { text: "Try shouting for help or look for others", score: { E: 1, F: 1 } }
        ]
      },
      {
        text: "Your fingers are frostbitten and almost immobile, what will you do?",
        options: [
          { text: "Grin and bear it to try to start fire, I can't stop", score: { T: 1, J: 1 } },
          { text: "Sit down to conserve energy, think about my past life", score: { I: 1, N: 1 } },
          { text: "Try to use mouth or other body parts to replace hands", score: { S: 1, P: 1 } },
          { text: "Shout to vent emotions, hoping to release stress", score: { E: 1, F: 1 } }
        ]
      },
      {
        text: "You have no matches left to start a fire, what will you do?",
        options: [
          { text: "Give up and wait quietly, maybe it's fate", score: { I: 1, N: 1 } },
          { text: "Hold the dog, try to warm up from it", score: { F: 1, S: 1 } },
          { text: "Use last strength to keep going", score: { T: 1, J: 1 } },
          { text: "Try to find something that can send a signal for help", score: { E: 1, P: 1 } }
        ]
      }
    ]
  };

  const resultData = {
    zh: {
      title: "你的求生人格",
      descriptions: {
        I: "你是內向且理性的人，善於分析並冷靜面對困境。",
        E: "你是外向且情感豐富的人，擅長與人互動並表達感受。",
        N: "你具有豐富的想像力和直覺，喜歡探索未知。",
        S: "你注重細節和現實，擅長實際行動和觀察。",
        T: "你講求邏輯和客觀，善於解決問題。",
        F: "你重視情感和價值觀，善於同理和關懷他人。",
        J: "你喜歡計畫和組織，有條理地完成任務。",
        P: "你靈活隨和，善於適應變化和臨機應變。"
      }
    },
    en: {
      title: "Your Survival Personality",
      descriptions: {
        I: "You are introverted and rational, good at analyzing and staying calm under pressure.",
        E: "You are extroverted and emotional, skilled at interacting with others and expressing feelings.",
        N: "You have rich imagination and intuition, love exploring the unknown.",
        S: "You pay attention to details and reality, good at practical actions and observations.",
        T: "You value logic and objectivity, adept at problem solving.",
        F: "You value emotions and values, empathetic and caring.",
        J: "You like planning and organizing, completing tasks methodically.",
        P: "You are flexible and adaptable, good at adjusting to changes."
      }
    }
  };

  let currentLang = 'zh';
  let currentAnswers = [];

  const titleEl = document.getElementById('title');
  const quizEl = document.getElementById('quiz');
  const submitBtn = document.getElementById('submitBtn');
  const resultSection = document.getElementById('result');
  const resultTitleEl = document.getElementById('resultTitle');
  const typeTextEl = document.getElementById('typeText');
  const descTextEl = document.getElementById('descText');
  const langToggle = document.getElementById('langToggle');

  // 產生題目
  function renderQuiz() {
    quizEl.innerHTML = '';
    currentAnswers = new Array(quizData[currentLang].length).fill(null);
    quizData[currentLang].forEach((q, i) => {
      const questionDiv = document.createElement('div');
      questionDiv.className = 'mb-6';
      const questionTitle = document.createElement('h3');
      questionTitle.className = 'text-xl font-semibold mb-3 drop-shadow-lg';
      questionTitle.textContent = q.text;
      questionDiv.appendChild(questionTitle);

      q.options.forEach((opt, idx) => {
        const btn = document.createElement('button');
        btn.className = 'btn-ice block w-full text-left px-4 py-2 mb-2';
        btn.textContent = opt.text;
        btn.addEventListener('click', () => {
          currentAnswers[i] = opt.score;
          // 標示選取狀態
          // 先移除這題其他按鈕的 active 樣式
          Array.from(questionDiv.querySelectorAll('button')).forEach(b => b.classList.remove('opacity-50'));
          btn.classList.add('opacity-50');
          checkAllAnswered();
        });
        questionDiv.appendChild(btn);
      });

      quizEl.appendChild(questionDiv);
    });

    submitBtn.classList.add('hidden');
    resultSection.classList.add('hidden');
  }

  function checkAllAnswered() {
    if (currentAnswers.every(ans => ans !== null)) {
      submitBtn.classList.remove('hidden');
    } else {
      submitBtn.classList.add('hidden');
    }
  }

  // 計算結果
  function calculateResult() {
    const totals = { I: 0, E: 0, N: 0, S: 0, T: 0, F: 0, J: 0, P: 0 };
    currentAnswers.forEach(ans => {
      for (const trait in ans) {
        totals[trait] += ans[trait];
      }
    });
    return totals;
  }

  // 顯示結果
  function showResult() {
    const totals = calculateResult();

    // 顯示標題和描述
    resultTitleEl.textContent = resultData[currentLang].title;

    // 找出最高分的特質
    const maxScore = Math.max(...Object.values(totals));
    const topTraits = Object.entries(totals)
      .filter(([_, score]) => score === maxScore)
      .map(([trait]) => trait);

    typeTextEl.textContent = topTraits.join(', ');

    // 拼出特質描述
    let descArr = topTraits.map(trait => resultData[currentLang].descriptions[trait]);
    descTextEl.textContent = descArr.join(' / ');

    // 顯示圖表
    renderChart(totals);

    resultSection.classList.remove('hidden');
    submitBtn.classList.add('hidden');
  }

  // 用 Chart.js 畫雷達圖
  let radarChartInstance = null;
  function renderChart(totals) {
    const ctx = document.getElementById('radarChart').getContext('2d');
    if (radarChartInstance) {
      radarChartInstance.destroy();
    }
    radarChartInstance = new Chart(ctx, {
      type: 'radar',
      data: {
        labels: ['I', 'E', 'N', 'S', 'T', 'F', 'J', 'P'],
        datasets: [{
          label: currentLang === 'zh' ? '特質分數' : 'Trait Scores',
          data: [
            totals.I, totals.E, totals.N, totals.S,
            totals.T, totals.F, totals.J, totals.P
          ],
          backgroundColor: 'rgba(79, 195, 247, 0.3)',
          borderColor: '#4fc3f7',
          borderWidth: 2,
          pointBackgroundColor: '#0288d1',
          pointRadius: 5,
          fill: true
        }]
      },
      options: {
        scales: {
          r: {
            angleLines: { display: true },
            suggestedMin: 0,
            suggestedMax: 5,
            ticks: {
              stepSize: 1,
              color: '#a0d8ff'
            },
            pointLabels: {
              color: '#a0d8ff',
              font: { size: 14, weight: 'bold' }
            }
          }
        },
        plugins: {
          legend: { display: false }
        },
        responsive: true,
        maintainAspectRatio: false
      }
    });
  }

  submitBtn.addEventListener('click', showResult);

  // 語言切換
  langToggle.addEventListener('click', () => {
    currentLang = currentLang === 'zh' ? 'en' : 'zh';
    langToggle.textContent = currentLang === 'zh' ? 'English' : '中文';
    // 切換標題
    titleEl.textContent = currentLang === 'zh' ? '你能在零下50度中活下來嗎？' : 'Can You Survive at -50°C?';
    // 重置題目與結果
    renderQuiz();
    resultSection.classList.add('hidden');
  });

  // 初始渲染
  renderQuiz();
</script>
</body>
</html>
